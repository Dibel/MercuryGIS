<Fluent:RibbonWindow xmlns:GisSmartTools="clr-namespace:GisSmartTools;assembly=GisSmartTools" 
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:xcad="http://schemas.xceed.com/wpf/xaml/avalondock"
        xmlns:Fluent="clr-namespace:Fluent;assembly=Fluent"
        xmlns:local="clr-namespace:MercuryGIS"
        xmlns:MercuryGISControlWPF="clr-namespace:GisSmartTools;assembly=MapControlWPF"
        xmlns:MercuryGISControl="clr-namespace:MercuryGISControl;assembly=MercuryGISControl" x:Class="MercuryGIS.MainWindow"
        mc:Ignorable="d"
        Title="MercuryGIS" Height="600" Width="700" SizeChanged="RibbonWindow_SizeChanged">

    <Fluent:RibbonWindow.Resources>
        <ResourceDictionary>
            <TextBlock x:Key="Pan" Cursor="Resources/Pan.cur"/>
            <TextBlock x:Key="ZoomIn" Cursor="Resources/ZoomIn.cur"/>
            <TextBlock x:Key="ZoomOut" Cursor="Resources/ZoomOut.cur"/>

            <ContextMenu x:Key="ItemContextMenu">
                <MenuItem  Header="上移" Click="MoveUp_Click"/>
                <MenuItem  Header="下移" />
                <MenuItem  Header="重命名"/>
                <MenuItem x:Name="Property" Header="图层属性" Click="Property_Click"/>
                <MenuItem Header="属性数据" Click="Data_Click"/>
            </ContextMenu>
            <Style x:Key="TreeViewItemStyle" TargetType="TreeViewItem">
                <Setter Property="IsExpanded" Value="True" />
                <Setter Property="KeyboardNavigation.AcceptsReturn" Value="True" />
                <Setter Property="ContextMenu" Value="{StaticResource ItemContextMenu}" />
            </Style>

            <HierarchicalDataTemplate 
        x:Key="CheckBoxItemTemplate"
        ItemsSource="{Binding Children, Mode=OneTime}"
        >
                <StackPanel Orientation="Horizontal">
                    <CheckBox
            Focusable="False" 
            IsChecked="{Binding IsChecked}"
            Visibility="{Binding IsVisible}"
            VerticalAlignment="Center"
            />
                    <Rectangle Fill="{Binding Brush}" Visibility="{Binding Color_IsVisible}" Width="30" Height="15" VerticalAlignment="Center"></Rectangle>
                    <ContentPresenter 
            Content="{Binding Name, Mode=OneTime}" 
            Margin="2,0"
            />
                </StackPanel>
            </HierarchicalDataTemplate>
        </ResourceDictionary>
        <!--<ControlTemplate x:Key="ItemTemplate" TargetType="{x:Type ListViewItem}">
            <Border
		BorderThickness="{TemplateBinding Border.BorderThickness}"
		Padding="{TemplateBinding Padding}"
		BorderBrush="{TemplateBinding Border.BorderBrush}"
		Background="{TemplateBinding Panel.Background}"
		SnapsToDevicePixels="True">
                <ContentPresenter
			Content="{TemplateBinding Content}"
			ContentTemplate="{TemplateBinding ContentTemplate}"
			HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
			VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
			SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </Border>
        </ControlTemplate>
        
                
        <ContextMenu x:Key="ItemContextMenu">
            <MenuItem x:Name="menuDelete" Header="删除" Click="menuDelete_Click" Command="{Binding Path=DataContext.MoreInfo, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}"/>
        </ContextMenu>

        <Style TargetType="{x:Type ListViewItem}">
            <Setter Property="Template" Value="{StaticResource ItemTemplate}" />
            <Setter Property="ContextMenu" Value="{StaticResource ItemContextMenu}" />
        </Style>

        <DataTemplate x:Key="ItemDataTemplate">
            <CheckBox
			x:Name="checkbox"
			Content="{Binding}"
			IsChecked="{Binding RelativeSource={RelativeSource FindAncestor,
                    AncestorType={x:Type ListViewItem}}, Path=IsSelected, Mode=OneWayToSource}" />
        </DataTemplate>-->
    </Fluent:RibbonWindow.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition x:Name="row" Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <Fluent:Ribbon AutomaticStateManagement="True"
			x:Name="myRibbon">
            <!--Backstage-->
            <Fluent:Ribbon.Menu>
                <Fluent:Backstage>
                    <Fluent:BackstageTabControl>
                        <Fluent:Button Header="新建" Click="New_MouseDown"/>
                        <Fluent:Button Header="打开" Click="Open_MouseDown"/>
                        <Fluent:Button Header="保存" Click="Save_MouseDown"/>
                        <Fluent:Button Header="导入" Click="Button_Click_1"/>
                        <Fluent:Button Header="导出" Click="Button_Click"/>
                    </Fluent:BackstageTabControl>
                </Fluent:Backstage>
            </Fluent:Ribbon.Menu>
            <!--Tabs-->
            <Fluent:RibbonTabItem x:Name="TabStart" Header="开始">
                <Fluent:RibbonGroupBox Header="地图模式">
                    <Fluent:ToggleButton x:Name="btnSelect" Header="选择"
						LargeIcon="Resources/Select.png" Click="btnSelect_Click"/>
                    <Fluent:ToggleButton x:Name="btnPan" Header="漫游"
						LargeIcon="Resources/Pan.png" Click="btnPan_Click"/>
                    <Fluent:ToggleButton x:Name="btnEdit" Header="编辑"
						LargeIcon="Resources/StartEdit.png" Click="btnEdit_Click"/>
                    <Fluent:Button x:Name="btnWholeScreen" Header="显示全图"
						LargeIcon="Resources/WholeMap.png" Click="btnWholeScreen_Click"/>
                    <Fluent:ToggleButton x:Name="btnZoomIn" Header="放大" Icon="Resources/ZoomIn.png" SizeDefinition="Small"  Click="btnZoomIn_Click"/>
                    <Fluent:ToggleButton x:Name="btnzoomOut" Header="缩小" Icon="Resources/ZoomOut.png" SizeDefinition="Small" Click="btnzoomOut_Click"/>
                </Fluent:RibbonGroupBox>
                <Fluent:RibbonGroupBox Header="图层操作">
                    <Fluent:DropDownButton x:Name="btnAddLayer" Header="添加图层"
						LargeIcon="Resources/AddLayer.png" ClosePopupOnMouseDown="True">
                        <MenuItem x:Name="btnAddPointLayer" Header="添加点图层" Click="btnAddPointLayer_Click"></MenuItem>
                        <MenuItem x:Name="btnAddLineLayer" Header="添加线图层" Click="btnAddLineLayer_Click"></MenuItem>
                        <MenuItem x:Name="btnAddPolygonLayer" Header="添加面图层" Click="btnAddPolygonLayer_Click"></MenuItem>
                    </Fluent:DropDownButton>
                    <Fluent:Button x:Name="btnImportShp" Header="导入Shapefile"
						LargeIcon="Resources/ImportShp.png" Click="btnImportShp_Click"/>
                </Fluent:RibbonGroupBox>
                <Fluent:RibbonGroupBox Header="查询">
                    <Fluent:Button x:Name="btnQueryByLocat" Header="按位置查询"
						LargeIcon="Resources/SelectByLocation.png" Click="btnQueryByLocat_Click"/>
                    <Fluent:Button x:Name="btnQueryByAttri" Header="按属性查询"
						LargeIcon="Resources/SelectByAttributes.png" Click="btnQueryByAttri_Click"/>
                </Fluent:RibbonGroupBox>
                <Fluent:RibbonGroupBox Header="可视化">
                    <Fluent:ToggleButton x:Name="btnProjection" Header="投影"
						LargeIcon="Resources/Projection.png" Click="btnProjection_Click"/>
                    <Fluent:Button x:Name="btnSymbolize" Header="符号设置"
						LargeIcon="Resources/Symbology.png" Click="btnSymbolize_Click"/>
                    <Fluent:Button x:Name="btnMapLable" Header="添加注记"
						LargeIcon="Resources/TextLabel.png" Click="btnMapLable_Click"/>
                    <Fluent:Button x:Name="btnMapping" Header="生成地图"
						LargeIcon="Resources/GenerateMap.png" Click="btnMapping_Click"/>
                </Fluent:RibbonGroupBox>
            </Fluent:RibbonTabItem>

            <Fluent:RibbonTabItem x:Name="TabElement" Header="要素" Group="{Binding ElementName=groupEdit}">
                <Fluent:RibbonGroupBox Header="添加要素">
                    <Fluent:Button x:Name="btnAddElement" Header="添加要素"
						Icon="Images\Green.png"
						LargeIcon="Resources/AddFeature.png" Click="btnAddElement_Click"/>
                </Fluent:RibbonGroupBox>
                <Fluent:RibbonGroupBox Header="选择要素">
                    <Fluent:Button x:Name="btnSelectByLocation" Header="按位置选择"
						Icon="Images\Green.png"
						LargeIcon="Resources/SelectByLocation.png"/>
                    <Fluent:Button x:Name="btnSelectByAttribute" Header="按属性选择"
						Icon="Images\Green.png"
						LargeIcon="Resources/SelectByAttributes.png"/>
                </Fluent:RibbonGroupBox>
                <Fluent:RibbonGroupBox Header="编辑">
                    <Fluent:Button x:Name="btnUndo" Header="撤销"
						LargeIcon="Resources/Undo.png" Click="btnUndo_Click"/>
                    <Fluent:Button x:Name="btnRedo" Header="重做"
						LargeIcon="Resources/Redo.png" Click="btnRedo_Click"/>
                </Fluent:RibbonGroupBox>
                <Fluent:RibbonGroupBox Header="编辑状态">
                    <Fluent:Button x:Name="btnSaveEdit" Header="保存编辑"
						Icon="Images\Green.png"
						LargeIcon="Resources/SaveEdit.png"/>
                    <Fluent:Button x:Name="btnEndEdit" Header="结束编辑"
						Icon="Images\Green.png"
						LargeIcon="Resources/FinishEdit.png" Click="btnEndEdit_Click"/>
                </Fluent:RibbonGroupBox>
            </Fluent:RibbonTabItem>

            <Fluent:RibbonTabItem x:Name="TabMap" Header="地图" Group="{Binding ElementName=groupMap}">
                <Fluent:RibbonGroupBox Header="地图元素">
                    <Fluent:ToggleButton x:Name="btnTitle" Header="标题"
						Icon="Resources/Title16.png" SizeDefinition="Middle" Click="btnTitle_Click" IsChecked="True">
                    </Fluent:ToggleButton>
                    <Fluent:ToggleButton x:Name="btnLegend" Header="图例"
						Icon="Resources/Legend16.png" SizeDefinition="Middle" Click="btnLegend_Click" IsChecked="True"/>
                </Fluent:RibbonGroupBox>
                <Fluent:RibbonGroupBox Header="编辑">
                    <Fluent:Button x:Name="btnEditTitle" Header="编辑标题"
						LargeIcon="Resources/Title32.png" Click="btnEditTitle_Click"/>
                    <Fluent:DropDownButton x:Name="btnEditLegend" Header="编辑图例"
						LargeIcon="Resources/Legend32.png" ClosePopupOnMouseDown="True">
                        <MenuItem x:Name="btnEditLegendTitle" Header="编辑图例标题字体" Click="btnEditLegendTitle_Click"></MenuItem>
                        <MenuItem x:Name="btnEditLegendText" Header="编辑图例文本字体" Click="btnEditLegendText_Click"></MenuItem>
                    </Fluent:DropDownButton>
                </Fluent:RibbonGroupBox>
                <Fluent:RibbonGroupBox Header="导出">
                    <Fluent:Button x:Name="btnSaveMap" Header="保存"
						LargeIcon="Resources/SaveEdit.png" Click="btnSaveMap_Click"/>
                </Fluent:RibbonGroupBox>
                <Fluent:RibbonGroupBox Header="视图">
                    <Fluent:Button x:Name="btnReturn" Header="关闭地图模式"
						LargeIcon="Resources/Close.png" Click="btnReturn_Click"/>
                </Fluent:RibbonGroupBox>
            </Fluent:RibbonTabItem>
            <!--<Fluent:RibbonTabItem x:Name="TabLayer" Header="图层" Group="{Binding ElementName=groupEdit}">
                <Fluent:RibbonGroupBox Header="添加要素">
                </Fluent:RibbonGroupBox>
            </Fluent:RibbonTabItem>-->

            <Fluent:Ribbon.ContextualGroups>
                <Fluent:RibbonContextualTabGroup Header="编辑" Visibility="Collapsed"
                x:Name="groupEdit" Background="Green" BorderBrush="Green" />
                <Fluent:RibbonContextualTabGroup Header="生成地图" Visibility="Collapsed"
                x:Name="groupMap" Background="Red" BorderBrush="Red" />

                <Fluent:RibbonContextualTabGroup Header="图层" Visibility="Collapsed"
                x:Name="groupLayer" Background="Green" BorderBrush="Green" />
            </Fluent:Ribbon.ContextualGroups>
        </Fluent:Ribbon>
        <Fluent:StatusBar x:Name="statusBar" HorizontalAlignment="Stretch"
			VerticalAlignment="Bottom"
			Grid.Row="2">
            <Fluent:StatusBarItem x:Name="location"
				Value="(0, 0)" Foreground="White"
				HorizontalAlignment="Left">
            </Fluent:StatusBarItem>
            <Separator HorizontalAlignment="Left" />

            <Separator HorizontalAlignment="Left" />
        </Fluent:StatusBar>
        <Grid Margin="0,0,0,0.5" Grid.Row="1">
            <!--<Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="4*"/>
            </Grid.ColumnDefinitions>-->
            <xcad:DockingManager  Grid.Row="1"
                           AllowMixedOrientation="True">
                <xcad:DockingManager.DocumentHeaderTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <Image Source="{Binding IconSource}" Margin="0,0,4,0"/>
                            <TextBlock Text="{Binding Title}" />
                        </StackPanel>
                    </DataTemplate>
                </xcad:DockingManager.DocumentHeaderTemplate>
                <xcad:LayoutRoot x:Name="_layoutRoot">
                    <xcad:LayoutPanel Orientation="Horizontal">
                        <xcad:LayoutAnchorablePane DockWidth="Auto">
                            <xcad:LayoutAnchorable ContentId="properties" Title="图层" CanHide="False" CanClose="False" AutoHideWidth="200">
                                <TreeView 
                                  x:Name="treeView"
                                  ItemContainerStyle="{StaticResource TreeViewItemStyle}"
                                  ItemsSource="{Binding Mode=OneTime}"
                                  ItemTemplate="{StaticResource CheckBoxItemTemplate}"
                                               SelectedItemChanged="treeView_SelectedItemChanged"                 
                                />
                            </xcad:LayoutAnchorable>
                        </xcad:LayoutAnchorablePane>
                        <xcad:LayoutDocumentPane>
                            <xcad:LayoutDocument x:Name="editing_view" ContentId="document1" Title="编辑视图" CanClose="False">
                                <GisSmartTools:MapControlWPF x:Name="mapControl" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" ClipToBounds="True"  MouseMove="mapControl_MouseMove"/>
                                <!--<MercuryGISControl:MapControl x:Name="mapControl" Height="414" Width="546" HorizontalAlignment="Left"  VerticalAlignment="Top" ClipToBounds="True" MouseMove="mapControl_MouseMove" MouseLeftButtonUp="mapControl_MouseLeftButtonUp"/>-->
                            </xcad:LayoutDocument>
                            <xcad:LayoutDocument x:Name="mapping_view" ContentId="document2" Title="制图视图" IsEnabled="False" CanClose="False" IsActiveChanged="mapping_view_IsActiveChanged">
                                <local:Mapping x:Name="mapping" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" ClipToBounds="True"/>
                            </xcad:LayoutDocument>
                        </xcad:LayoutDocumentPane>
                    </xcad:LayoutPanel>
                </xcad:LayoutRoot>
            </xcad:DockingManager>

            <!--<ListView x:Name="listView" Grid.Column="0" ScrollViewer.HorizontalScrollBarVisibility="Disabled" MouseDoubleClick="listView_MouseDoubleClick" PreviewMouseLeftButtonDown="listView_MouseLeftButtonDown">
                <ListView.Resources>
                    <Style TargetType="{x:Type GridViewColumnHeader}">
                        <Setter Property="Visibility" Value="Collapsed" />
                    </Style>
                    <ContextMenu x:Key="ItemContextMenu">
                        <MenuItem x:Name="MoveUp" Header="上移" Click="MoveUp_Click"/>
                        <MenuItem x:Name="MoveDown" Header="下移" Click="MoveDown_Click"/>
                        <MenuItem x:Name="Rename" Header="重命名" Click="Rename_Click"/>
                        -->
            <!--<MenuItem x:Name="Property" Header="图层属性" Click="Property_Click"/>-->
            <!--
                        <MenuItem x:Name="Data" Header="属性数据" Click="Data_Click"/>
                    </ContextMenu>
                </ListView.Resources>
                <ListView.ItemContainerStyle>
                    <Style TargetType="{x:Type ListViewItem}">
                        <Setter Property="ContextMenu" Value="{StaticResource ItemContextMenu}" />
                        -->
            <!--<EventSetter Event="PreviewMouseLeftButtonDown" Handler="listView_PreviewMouseLeftButtonDown"/>-->
            <!--
                    </Style>
                </ListView.ItemContainerStyle>
                <ListView.View>
                    <GridView>
                        <GridViewColumn Header="Check" Width="40">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <CheckBox IsChecked="{Binding isChecked}" Click="OnCheckItem"/>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Header="Name" Width="100" DisplayMemberBinding="{Binding name}" />
                    </GridView>
                </ListView.View>
            </ListView>-->


        </Grid>

        <!--<ListView Grid.Row="1" x:Name="listView" SelectionMode="Multiple"
			ItemsSource="{Binding}"
			ItemTemplate="{StaticResource ItemDataTemplate}"
			ToggleButton.Click="OnCheckItem" Margin="0,0,575,0.5" />-->
        
        
        
        <!--<TreeView x:Name="listView" ScrollViewer.HorizontalScrollBarVisibility="Disabled" MouseDoubleClick="listView_MouseDoubleClick" PreviewMouseLeftButtonDown="listView_MouseLeftButtonDown">
                                    <TreeView.Resources>
                                        <Style TargetType="{x:Type TreeViewItem}">
                                            <Setter Property="HeaderTemplate">
                                                <Setter.Value>
                                                    <DataTemplate>
                                                        <StackPanel Orientation="Horizontal">
                                                            <CheckBox Name="chk" Margin="2" IsChecked="{Binding isChecked}" Click="OnCheckItem"></CheckBox>
                                                            <TextBlock Text="{Binding name}"></TextBlock>
                                                        </StackPanel>
                                                    </DataTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                        <ContextMenu x:Key="ItemContextMenu">
                                            <MenuItem x:Name="MoveUp" Header="上移" Click="MoveUp_Click"/>
                                            <MenuItem x:Name="MoveDown" Header="下移" Click="MoveDown_Click"/>
                                            <MenuItem x:Name="Rename" Header="重命名" Click="Rename_Click"/>
                                            -->
        <!--<MenuItem x:Name="Property" Header="图层属性" Click="Property_Click"/>-->
        <!--
                                            <MenuItem x:Name="Data" Header="属性数据" Click="Data_Click"/>
                                        </ContextMenu>
                                    </TreeView.Resources>
                                    <TreeView.ItemContainerStyle>
                                        <Style TargetType="{x:Type TreeViewItem}">
                                            <Setter Property="ContextMenu" Value="{StaticResource ItemContextMenu}" />
                                            -->
        <!--<EventSetter Event="PreviewMouseLeftButtonDown" Handler="listView_PreviewMouseLeftButtonDown"/>-->
        <!--
                                        </Style>
                                    </TreeView.ItemContainerStyle>-->
        <!--<TreeViewItem Header="North America" IsExpanded="True"></TreeViewItem>-->

        <!--</TreeView>-->
        <!--<ListView x:Name="listView" ScrollViewer.HorizontalScrollBarVisibility="Disabled" MouseDoubleClick="listView_MouseDoubleClick" PreviewMouseLeftButtonDown="listView_MouseLeftButtonDown">
                      <ListView.Resources>
                          <Style TargetType="{x:Type GridViewColumnHeader}">
                              <Setter Property="Visibility" Value="Collapsed" />
                          </Style>
                          <ContextMenu x:Key="ItemContextMenu">
                              <MenuItem x:Name="MoveUp" Header="上移" Click="MoveUp_Click"/>
                              <MenuItem x:Name="MoveDown" Header="下移" Click="MoveDown_Click"/>
                              <MenuItem x:Name="Rename" Header="重命名" Click="Rename_Click"/>
                              -->
        <!--<MenuItem x:Name="Property" Header="图层属性" Click="Property_Click"/>-->
        <!--
                              <MenuItem x:Name="Data" Header="属性数据" Click="Data_Click"/>
                          </ContextMenu>
                      </ListView.Resources>
                      <ListView.ItemContainerStyle>
                          <Style TargetType="{x:Type ListViewItem}">
                              <Setter Property="ContextMenu" Value="{StaticResource ItemContextMenu}" />
                              -->
        <!--<EventSetter Event="PreviewMouseLeftButtonDown" Handler="listView_PreviewMouseLeftButtonDown"/>-->
        <!--
                          </Style>
                      </ListView.ItemContainerStyle>
                      <ListView.View>
                          <GridView>
                              <GridViewColumn Header="Check" Width="40">
                                  <GridViewColumn.CellTemplate>
                                      <DataTemplate>
                                          <CheckBox IsChecked="{Binding isChecked}" Click="OnCheckItem"/>
                                      </DataTemplate>
                                  </GridViewColumn.CellTemplate>
                              </GridViewColumn>
                              <GridViewColumn Header="Name" Width="100" DisplayMemberBinding="{Binding name}" />
                          </GridView>
                      </ListView.View>
                  </ListView>-->
    </Grid>
</Fluent:RibbonWindow>
